name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Cache
      uses: actions/cache@v2.1.6
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Restore dependencies
      run: dotnet restore AIS/AIS.sln
    - name: Build
      run: dotnet build --configuration Release --no-restore AIS/AIS.sln
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal AIS/AIS.sln
    - name: sonarscan-dotnet
      uses: highbyte/sonarscan-dotnet@v2.1.2
      with:
        sonarProjectKey: Blackolf931_CV.Back
        sonarProjectName: CV
        sonarOrganization: Blackolf931
        dotnetBuildArguments: --configuration Release CV/CV.sln
        dotnetTestArguments: --no-build --configuration Release --verbosity normal CV/CV.sln --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any 
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
